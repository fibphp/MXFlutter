apply from: new File(rootProject.projectDir, 'liquidcore.build.gradle')

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 28

    lintOptions {
        disable 'InvalidPackage'
    }

    signingConfigs {
        release {
            storeFile file('../yinseshow.jks')
            storePassword "yinseshow"
            keyAlias "yinse_show"
            keyPassword "yinseshow"
        }
    }

    defaultConfig {
        ndk {
            abiFilters 'armeabi-v7a'
        }

        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.imatrixteam.jsflutter"
        minSdkVersion 27
        targetSdkVersion 27
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        targetCompatibility = '1.8'
        sourceCompatibility = '1.8'
    }
    buildToolsVersion = buildToolsVersion
}

flutter {
    source '../..'
}

dependencies {
    if (findProject(':LiquidCore') != null) {
        implementation project(':LiquidCore')
    } else {
        implementation 'com.github.LiquidPlayer:LiquidCore:0.6.2'
    }

    implementation "com.android.support:support-v4:27.1.1"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
